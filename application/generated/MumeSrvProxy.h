/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp mumesrv.xml -p generated/MumeSrvProxy
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MUMESRVPROXY_H
#define MUMESRVPROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface ch.bitzgi.MumeSrv
 */
class ChBitzgiMumeSrvInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "ch.bitzgi.MumeSrv"; }

public:
    ChBitzgiMumeSrvInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~ChBitzgiMumeSrvInterface();

    Q_PROPERTY(bool switchOn READ switchOn)
    inline bool switchOn() const
    { return qvariant_cast< bool >(property("switchOn")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> setOpenPositionMs(double value)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(value);
        return asyncCallWithArgumentList(QStringLiteral("setOpenPositionMs"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace ch {
  namespace bitzgi {
    typedef ::ChBitzgiMumeSrvInterface MumeSrv;
  }
}
#endif
